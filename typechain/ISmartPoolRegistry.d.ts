/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface ISmartPoolRegistryInterface extends Interface {
  functions: {
    addSmartPool: TypedFunctionDescription<{
      encode([_smartPool]: [string]): string;
    }>;

    entries: TypedFunctionDescription<{
      encode([_index]: [BigNumberish]): string;
    }>;

    inRegistry: TypedFunctionDescription<{ encode([_pool]: [string]): string }>;

    removeSmartPool: TypedFunctionDescription<{
      encode([_index]: [BigNumberish]): string;
    }>;
  };

  events: {};
}

export class ISmartPoolRegistry extends Contract {
  connect(signerOrProvider: Signer | Provider | string): ISmartPoolRegistry;
  attach(addressOrName: string): ISmartPoolRegistry;
  deployed(): Promise<ISmartPoolRegistry>;

  on(event: EventFilter | string, listener: Listener): ISmartPoolRegistry;
  once(event: EventFilter | string, listener: Listener): ISmartPoolRegistry;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): ISmartPoolRegistry;
  removeAllListeners(eventName: EventFilter | string): ISmartPoolRegistry;
  removeListener(eventName: any, listener: Listener): ISmartPoolRegistry;

  interface: ISmartPoolRegistryInterface;

  functions: {
    addSmartPool(
      _smartPool: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    entries(_index: BigNumberish): Promise<string>;

    inRegistry(_pool: string): Promise<boolean>;

    removeSmartPool(
      _index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  addSmartPool(
    _smartPool: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  entries(_index: BigNumberish): Promise<string>;

  inRegistry(_pool: string): Promise<boolean>;

  removeSmartPool(
    _index: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {};

  estimate: {
    addSmartPool(_smartPool: string): Promise<BigNumber>;

    entries(_index: BigNumberish): Promise<BigNumber>;

    inRegistry(_pool: string): Promise<BigNumber>;

    removeSmartPool(_index: BigNumberish): Promise<BigNumber>;
  };
}
